#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RST")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCategory(Category instance);
  partial void UpdateCategory(Category instance);
  partial void DeleteCategory(Category instance);
  partial void InsertWebsiteSetting(WebsiteSetting instance);
  partial void UpdateWebsiteSetting(WebsiteSetting instance);
  partial void DeleteWebsiteSetting(WebsiteSetting instance);
  partial void InsertCustomDataSource(CustomDataSource instance);
  partial void UpdateCustomDataSource(CustomDataSource instance);
  partial void DeleteCustomDataSource(CustomDataSource instance);
  partial void InsertCustomPage(CustomPage instance);
  partial void UpdateCustomPage(CustomPage instance);
  partial void DeleteCustomPage(CustomPage instance);
  partial void InsertEmailMessage(EmailMessage instance);
  partial void UpdateEmailMessage(EmailMessage instance);
  partial void DeleteEmailMessage(EmailMessage instance);
  partial void InsertLink(Link instance);
  partial void UpdateLink(Link instance);
  partial void DeleteLink(Link instance);
  partial void InsertMember(Member instance);
  partial void UpdateMember(Member instance);
  partial void DeleteMember(Member instance);
  partial void InsertPageComment(PageComment instance);
  partial void UpdatePageComment(PageComment instance);
  partial void DeletePageComment(PageComment instance);
  partial void InsertPost(Post instance);
  partial void UpdatePost(Post instance);
  partial void DeletePost(Post instance);
  partial void InsertTopStory(TopStory instance);
  partial void UpdateTopStory(TopStory instance);
  partial void DeleteTopStory(TopStory instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RSTConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Category> Categories
	{
		get
		{
			return this.GetTable<Category>();
		}
	}
	
	public System.Data.Linq.Table<WebsiteSetting> WebsiteSettings
	{
		get
		{
			return this.GetTable<WebsiteSetting>();
		}
	}
	
	public System.Data.Linq.Table<CustomDataSource> CustomDataSources
	{
		get
		{
			return this.GetTable<CustomDataSource>();
		}
	}
	
	public System.Data.Linq.Table<CustomPage> CustomPages
	{
		get
		{
			return this.GetTable<CustomPage>();
		}
	}
	
	public System.Data.Linq.Table<EmailMessage> EmailMessages
	{
		get
		{
			return this.GetTable<EmailMessage>();
		}
	}
	
	public System.Data.Linq.Table<Link> Links
	{
		get
		{
			return this.GetTable<Link>();
		}
	}
	
	public System.Data.Linq.Table<Member> Members
	{
		get
		{
			return this.GetTable<Member>();
		}
	}
	
	public System.Data.Linq.Table<MemberStatus> MemberStatus
	{
		get
		{
			return this.GetTable<MemberStatus>();
		}
	}
	
	public System.Data.Linq.Table<PageComment> PageComments
	{
		get
		{
			return this.GetTable<PageComment>();
		}
	}
	
	public System.Data.Linq.Table<Post> Posts
	{
		get
		{
			return this.GetTable<Post>();
		}
	}
	
	public System.Data.Linq.Table<PostStatus> PostStatus
	{
		get
		{
			return this.GetTable<PostStatus>();
		}
	}
	
	public System.Data.Linq.Table<TopStory> TopStories
	{
		get
		{
			return this.GetTable<TopStory>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _UrlName;
	
	private System.Nullable<int> _Parent;
	
	private byte _Status;
	
	private EntitySet<Category> _Categories;
	
	private EntitySet<Post> _Posts;
	
	private EntityRef<Category> _Category1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
	
	public Category()
	{
		this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
		this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
		this._Category1 = default(EntityRef<Category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UrlName
	{
		get
		{
			return this._UrlName;
		}
		set
		{
			if ((this._UrlName != value))
			{
				this.OnUrlNameChanging(value);
				this.SendPropertyChanging();
				this._UrlName = value;
				this.SendPropertyChanged("UrlName");
				this.OnUrlNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
	public System.Nullable<int> Parent
	{
		get
		{
			return this._Parent;
		}
		set
		{
			if ((this._Parent != value))
			{
				if (this._Category1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParentChanging(value);
				this.SendPropertyChanging();
				this._Parent = value;
				this.SendPropertyChanged("Parent");
				this.OnParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="ID", OtherKey="Parent")]
	public EntitySet<Category> Categories
	{
		get
		{
			return this._Categories;
		}
		set
		{
			this._Categories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Posts", ThisKey="ID", OtherKey="Category")]
	public EntitySet<Post> Posts
	{
		get
		{
			return this._Posts;
		}
		set
		{
			this._Posts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
	public Category Category1
	{
		get
		{
			return this._Category1.Entity;
		}
		set
		{
			Category previousValue = this._Category1.Entity;
			if (((previousValue != value) 
						|| (this._Category1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Category1.Entity = null;
					previousValue.Categories.Remove(this);
				}
				this._Category1.Entity = value;
				if ((value != null))
				{
					value.Categories.Add(this);
					this._Parent = value.ID;
				}
				else
				{
					this._Parent = default(Nullable<int>);
				}
				this.SendPropertyChanged("Category1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Categories(Category entity)
	{
		this.SendPropertyChanging();
		entity.Category1 = this;
	}
	
	private void detach_Categories(Category entity)
	{
		this.SendPropertyChanging();
		entity.Category1 = null;
	}
	
	private void attach_Posts(Post entity)
	{
		this.SendPropertyChanging();
		entity.Category1 = this;
	}
	
	private void detach_Posts(Post entity)
	{
		this.SendPropertyChanging();
		entity.Category1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebsiteSetting")]
public partial class WebsiteSetting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _KeyName;
	
	private string _KeyValue;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnKeyValueChanging(string value);
    partial void OnKeyValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public WebsiteSetting()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string KeyName
	{
		get
		{
			return this._KeyName;
		}
		set
		{
			if ((this._KeyName != value))
			{
				this.OnKeyNameChanging(value);
				this.SendPropertyChanging();
				this._KeyName = value;
				this.SendPropertyChanged("KeyName");
				this.OnKeyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string KeyValue
	{
		get
		{
			return this._KeyValue;
		}
		set
		{
			if ((this._KeyValue != value))
			{
				this.OnKeyValueChanging(value);
				this.SendPropertyChanging();
				this._KeyValue = value;
				this.SendPropertyChanged("KeyValue");
				this.OnKeyValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomDataSource")]
public partial class CustomDataSource : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Query;
	
	private System.DateTime _DateCreated;
	
	private long _CreatedBy;
	
	private System.Nullable<System.DateTime> _DateModified;
	
	private System.Nullable<long> _ModifiedBy;
	
	private string _HtmlTemplate;
	
	private EntityRef<Member> _Member;
	
	private EntityRef<Member> _Member1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnHtmlTemplateChanging(string value);
    partial void OnHtmlTemplateChanged();
    #endregion
	
	public CustomDataSource()
	{
		this._Member = default(EntityRef<Member>);
		this._Member1 = default(EntityRef<Member>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Query
	{
		get
		{
			return this._Query;
		}
		set
		{
			if ((this._Query != value))
			{
				this.OnQueryChanging(value);
				this.SendPropertyChanging();
				this._Query = value;
				this.SendPropertyChanged("Query");
				this.OnQueryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
	public long CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._Member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateModified
	{
		get
		{
			return this._DateModified;
		}
		set
		{
			if ((this._DateModified != value))
			{
				this.OnDateModifiedChanging(value);
				this.SendPropertyChanging();
				this._DateModified = value;
				this.SendPropertyChanged("DateModified");
				this.OnDateModifiedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
	public System.Nullable<long> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				if (this._Member1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlTemplate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string HtmlTemplate
	{
		get
		{
			return this._HtmlTemplate;
		}
		set
		{
			if ((this._HtmlTemplate != value))
			{
				this.OnHtmlTemplateChanging(value);
				this.SendPropertyChanging();
				this._HtmlTemplate = value;
				this.SendPropertyChanged("HtmlTemplate");
				this.OnHtmlTemplateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member
	{
		get
		{
			return this._Member.Entity;
		}
		set
		{
			Member previousValue = this._Member.Entity;
			if (((previousValue != value) 
						|| (this._Member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member.Entity = null;
					previousValue.CustomDataSources.Remove(this);
				}
				this._Member.Entity = value;
				if ((value != null))
				{
					value.CustomDataSources.Add(this);
					this._CreatedBy = value.ID;
				}
				else
				{
					this._CreatedBy = default(long);
				}
				this.SendPropertyChanged("Member");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member1
	{
		get
		{
			return this._Member1.Entity;
		}
		set
		{
			Member previousValue = this._Member1.Entity;
			if (((previousValue != value) 
						|| (this._Member1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member1.Entity = null;
					previousValue.CustomDataSources1.Remove(this);
				}
				this._Member1.Entity = value;
				if ((value != null))
				{
					value.CustomDataSources1.Add(this);
					this._ModifiedBy = value.ID;
				}
				else
				{
					this._ModifiedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("Member1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomPage")]
public partial class CustomPage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.DateTime _DateCreated;
	
	private long _CreatedBy;
	
	private System.Nullable<System.DateTime> _DateModified;
	
	private System.Nullable<long> _ModifiedBy;
	
	private byte _Status;
	
	private System.Nullable<byte> _PageType;
	
	private bool _Sitemap;
	
	private EntityRef<Member> _Member;
	
	private EntityRef<Member> _Member1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnPageTypeChanging(System.Nullable<byte> value);
    partial void OnPageTypeChanged();
    partial void OnSitemapChanging(bool value);
    partial void OnSitemapChanged();
    #endregion
	
	public CustomPage()
	{
		this._Member = default(EntityRef<Member>);
		this._Member1 = default(EntityRef<Member>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
	public long CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._Member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateModified
	{
		get
		{
			return this._DateModified;
		}
		set
		{
			if ((this._DateModified != value))
			{
				this.OnDateModifiedChanging(value);
				this.SendPropertyChanging();
				this._DateModified = value;
				this.SendPropertyChanged("DateModified");
				this.OnDateModifiedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
	public System.Nullable<long> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				if (this._Member1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageType", DbType="TinyInt")]
	public System.Nullable<byte> PageType
	{
		get
		{
			return this._PageType;
		}
		set
		{
			if ((this._PageType != value))
			{
				this.OnPageTypeChanging(value);
				this.SendPropertyChanging();
				this._PageType = value;
				this.SendPropertyChanged("PageType");
				this.OnPageTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sitemap", DbType="Bit NOT NULL")]
	public bool Sitemap
	{
		get
		{
			return this._Sitemap;
		}
		set
		{
			if ((this._Sitemap != value))
			{
				this.OnSitemapChanging(value);
				this.SendPropertyChanging();
				this._Sitemap = value;
				this.SendPropertyChanged("Sitemap");
				this.OnSitemapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member
	{
		get
		{
			return this._Member.Entity;
		}
		set
		{
			Member previousValue = this._Member.Entity;
			if (((previousValue != value) 
						|| (this._Member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member.Entity = null;
					previousValue.CustomPages.Remove(this);
				}
				this._Member.Entity = value;
				if ((value != null))
				{
					value.CustomPages.Add(this);
					this._CreatedBy = value.ID;
				}
				else
				{
					this._CreatedBy = default(long);
				}
				this.SendPropertyChanged("Member");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member1
	{
		get
		{
			return this._Member1.Entity;
		}
		set
		{
			Member previousValue = this._Member1.Entity;
			if (((previousValue != value) 
						|| (this._Member1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member1.Entity = null;
					previousValue.CustomPages1.Remove(this);
				}
				this._Member1.Entity = value;
				if ((value != null))
				{
					value.CustomPages1.Add(this);
					this._ModifiedBy = value.ID;
				}
				else
				{
					this._ModifiedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("Member1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailMessage")]
public partial class EmailMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ID;
	
	private string _FromAddress;
	
	private string _ToAddress;
	
	private string _Subject;
	
	private string _Message;
	
	private bool _IsRead;
	
	private System.DateTime _SentDate;
	
	private System.DateTime _CreateDate;
	
	private bool _IsSent;
	
	private byte _EmailType;
	
	private string _EmailGroup;
	
	private System.Nullable<System.DateTime> _ReadDate;
	
	private string _CCAdress;
	
	private string _ToName;
	
	private string _FromName;
	
	private System.DateTime _LastAttempt;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFromAddressChanging(string value);
    partial void OnFromAddressChanged();
    partial void OnToAddressChanging(string value);
    partial void OnToAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnSentDateChanging(System.DateTime value);
    partial void OnSentDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    partial void OnEmailTypeChanging(byte value);
    partial void OnEmailTypeChanged();
    partial void OnEmailGroupChanging(string value);
    partial void OnEmailGroupChanged();
    partial void OnReadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReadDateChanged();
    partial void OnCCAdressChanging(string value);
    partial void OnCCAdressChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnLastAttemptChanging(System.DateTime value);
    partial void OnLastAttemptChanged();
    #endregion
	
	public EmailMessage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string FromAddress
	{
		get
		{
			return this._FromAddress;
		}
		set
		{
			if ((this._FromAddress != value))
			{
				this.OnFromAddressChanging(value);
				this.SendPropertyChanging();
				this._FromAddress = value;
				this.SendPropertyChanged("FromAddress");
				this.OnFromAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string ToAddress
	{
		get
		{
			return this._ToAddress;
		}
		set
		{
			if ((this._ToAddress != value))
			{
				this.OnToAddressChanging(value);
				this.SendPropertyChanging();
				this._ToAddress = value;
				this.SendPropertyChanged("ToAddress");
				this.OnToAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
	public bool IsRead
	{
		get
		{
			return this._IsRead;
		}
		set
		{
			if ((this._IsRead != value))
			{
				this.OnIsReadChanging(value);
				this.SendPropertyChanging();
				this._IsRead = value;
				this.SendPropertyChanged("IsRead");
				this.OnIsReadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime NOT NULL")]
	public System.DateTime SentDate
	{
		get
		{
			return this._SentDate;
		}
		set
		{
			if ((this._SentDate != value))
			{
				this.OnSentDateChanging(value);
				this.SendPropertyChanging();
				this._SentDate = value;
				this.SendPropertyChanged("SentDate");
				this.OnSentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit NOT NULL")]
	public bool IsSent
	{
		get
		{
			return this._IsSent;
		}
		set
		{
			if ((this._IsSent != value))
			{
				this.OnIsSentChanging(value);
				this.SendPropertyChanging();
				this._IsSent = value;
				this.SendPropertyChanged("IsSent");
				this.OnIsSentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailType", DbType="TinyInt NOT NULL")]
	public byte EmailType
	{
		get
		{
			return this._EmailType;
		}
		set
		{
			if ((this._EmailType != value))
			{
				this.OnEmailTypeChanging(value);
				this.SendPropertyChanging();
				this._EmailType = value;
				this.SendPropertyChanged("EmailType");
				this.OnEmailTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailGroup", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string EmailGroup
	{
		get
		{
			return this._EmailGroup;
		}
		set
		{
			if ((this._EmailGroup != value))
			{
				this.OnEmailGroupChanging(value);
				this.SendPropertyChanging();
				this._EmailGroup = value;
				this.SendPropertyChanged("EmailGroup");
				this.OnEmailGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReadDate
	{
		get
		{
			return this._ReadDate;
		}
		set
		{
			if ((this._ReadDate != value))
			{
				this.OnReadDateChanging(value);
				this.SendPropertyChanging();
				this._ReadDate = value;
				this.SendPropertyChanged("ReadDate");
				this.OnReadDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCAdress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string CCAdress
	{
		get
		{
			return this._CCAdress;
		}
		set
		{
			if ((this._CCAdress != value))
			{
				this.OnCCAdressChanging(value);
				this.SendPropertyChanging();
				this._CCAdress = value;
				this.SendPropertyChanged("CCAdress");
				this.OnCCAdressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ToName
	{
		get
		{
			return this._ToName;
		}
		set
		{
			if ((this._ToName != value))
			{
				this.OnToNameChanging(value);
				this.SendPropertyChanging();
				this._ToName = value;
				this.SendPropertyChanged("ToName");
				this.OnToNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string FromName
	{
		get
		{
			return this._FromName;
		}
		set
		{
			if ((this._FromName != value))
			{
				this.OnFromNameChanging(value);
				this.SendPropertyChanging();
				this._FromName = value;
				this.SendPropertyChanged("FromName");
				this.OnFromNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAttempt", DbType="DateTime NOT NULL")]
	public System.DateTime LastAttempt
	{
		get
		{
			return this._LastAttempt;
		}
		set
		{
			if ((this._LastAttempt != value))
			{
				this.OnLastAttemptChanging(value);
				this.SendPropertyChanging();
				this._LastAttempt = value;
				this.SendPropertyChanged("LastAttempt");
				this.OnLastAttemptChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Link")]
public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _LinkGroup;
	
	private string _URL;
	
	private string _Title;
	
	private string _Text;
	
	private string _Target;
	
	private System.Nullable<int> _ParentID;
	
	private int _Sequence;
	
	private EntitySet<Link> _Links;
	
	private EntityRef<Link> _Link1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLinkGroupChanging(string value);
    partial void OnLinkGroupChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
	
	public Link()
	{
		this._Links = new EntitySet<Link>(new Action<Link>(this.attach_Links), new Action<Link>(this.detach_Links));
		this._Link1 = default(EntityRef<Link>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LinkGroup
	{
		get
		{
			return this._LinkGroup;
		}
		set
		{
			if ((this._LinkGroup != value))
			{
				this.OnLinkGroupChanging(value);
				this.SendPropertyChanging();
				this._LinkGroup = value;
				this.SendPropertyChanged("LinkGroup");
				this.OnLinkGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Text
	{
		get
		{
			return this._Text;
		}
		set
		{
			if ((this._Text != value))
			{
				this.OnTextChanging(value);
				this.SendPropertyChanging();
				this._Text = value;
				this.SendPropertyChanged("Text");
				this.OnTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Target
	{
		get
		{
			return this._Target;
		}
		set
		{
			if ((this._Target != value))
			{
				this.OnTargetChanging(value);
				this.SendPropertyChanging();
				this._Target = value;
				this.SendPropertyChanged("Target");
				this.OnTargetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				if (this._Link1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
	public int Sequence
	{
		get
		{
			return this._Sequence;
		}
		set
		{
			if ((this._Sequence != value))
			{
				this.OnSequenceChanging(value);
				this.SendPropertyChanging();
				this._Sequence = value;
				this.SendPropertyChanged("Sequence");
				this.OnSequenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Link_Link", Storage="_Links", ThisKey="ID", OtherKey="ParentID")]
	public EntitySet<Link> Links
	{
		get
		{
			return this._Links;
		}
		set
		{
			this._Links.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Link_Link", Storage="_Link1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
	public Link Link1
	{
		get
		{
			return this._Link1.Entity;
		}
		set
		{
			Link previousValue = this._Link1.Entity;
			if (((previousValue != value) 
						|| (this._Link1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Link1.Entity = null;
					previousValue.Links.Remove(this);
				}
				this._Link1.Entity = value;
				if ((value != null))
				{
					value.Links.Add(this);
					this._ParentID = value.ID;
				}
				else
				{
					this._ParentID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Link1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Links(Link entity)
	{
		this.SendPropertyChanging();
		entity.Link1 = this;
	}
	
	private void detach_Links(Link entity)
	{
		this.SendPropertyChanging();
		entity.Link1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private string _Email;
	
	private string _Password;
	
	private System.DateTime _Createdate;
	
	private bool _Newsletter;
	
	private byte _UserType;
	
	private string _MemberName;
	
	private byte _Status;
	
	private System.Nullable<System.DateTime> _LastLogon;
	
	private System.Nullable<System.DateTime> _DOB;
	
	private string _Country;
	
	private string _AlternateEmail;
	
	private string _Mobile;
	
	private string _AlternateEmail2;
	
	private string _Phone;
	
	private string _Address;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private System.Nullable<long> _ModifiedBy;
	
	private string _LastName;
	
	private System.Nullable<char> _Gender;
	
	private string _MemberImage;
	
	private string _UserName;
	
	private EntitySet<CustomDataSource> _CustomDataSources;
	
	private EntitySet<CustomDataSource> _CustomDataSources1;
	
	private EntitySet<CustomPage> _CustomPages;
	
	private EntitySet<CustomPage> _CustomPages1;
	
	private EntitySet<Member> _Members;
	
	private EntitySet<PageComment> _PageComments;
	
	private EntitySet<PageComment> _PageComments1;
	
	private EntitySet<Post> _Posts;
	
	private EntitySet<Post> _Posts1;
	
	private EntitySet<TopStory> _TopStories;
	
	private EntityRef<Member> _Member1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedateChanging(System.DateTime value);
    partial void OnCreatedateChanged();
    partial void OnNewsletterChanging(bool value);
    partial void OnNewsletterChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnLastLogonChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLogonChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnAlternateEmailChanging(string value);
    partial void OnAlternateEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnAlternateEmail2Changing(string value);
    partial void OnAlternateEmail2Changed();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnMemberImageChanging(string value);
    partial void OnMemberImageChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
	
	public Member()
	{
		this._CustomDataSources = new EntitySet<CustomDataSource>(new Action<CustomDataSource>(this.attach_CustomDataSources), new Action<CustomDataSource>(this.detach_CustomDataSources));
		this._CustomDataSources1 = new EntitySet<CustomDataSource>(new Action<CustomDataSource>(this.attach_CustomDataSources1), new Action<CustomDataSource>(this.detach_CustomDataSources1));
		this._CustomPages = new EntitySet<CustomPage>(new Action<CustomPage>(this.attach_CustomPages), new Action<CustomPage>(this.detach_CustomPages));
		this._CustomPages1 = new EntitySet<CustomPage>(new Action<CustomPage>(this.attach_CustomPages1), new Action<CustomPage>(this.detach_CustomPages1));
		this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
		this._PageComments = new EntitySet<PageComment>(new Action<PageComment>(this.attach_PageComments), new Action<PageComment>(this.detach_PageComments));
		this._PageComments1 = new EntitySet<PageComment>(new Action<PageComment>(this.attach_PageComments1), new Action<PageComment>(this.detach_PageComments1));
		this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
		this._Posts1 = new EntitySet<Post>(new Action<Post>(this.attach_Posts1), new Action<Post>(this.detach_Posts1));
		this._TopStories = new EntitySet<TopStory>(new Action<TopStory>(this.attach_TopStories), new Action<TopStory>(this.detach_TopStories));
		this._Member1 = default(EntityRef<Member>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdate", DbType="DateTime NOT NULL")]
	public System.DateTime Createdate
	{
		get
		{
			return this._Createdate;
		}
		set
		{
			if ((this._Createdate != value))
			{
				this.OnCreatedateChanging(value);
				this.SendPropertyChanging();
				this._Createdate = value;
				this.SendPropertyChanged("Createdate");
				this.OnCreatedateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newsletter", DbType="Bit NOT NULL")]
	public bool Newsletter
	{
		get
		{
			return this._Newsletter;
		}
		set
		{
			if ((this._Newsletter != value))
			{
				this.OnNewsletterChanging(value);
				this.SendPropertyChanging();
				this._Newsletter = value;
				this.SendPropertyChanged("Newsletter");
				this.OnNewsletterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL")]
	public byte UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string MemberName
	{
		get
		{
			return this._MemberName;
		}
		set
		{
			if ((this._MemberName != value))
			{
				this.OnMemberNameChanging(value);
				this.SendPropertyChanging();
				this._MemberName = value;
				this.SendPropertyChanged("MemberName");
				this.OnMemberNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogon", DbType="DateTime")]
	public System.Nullable<System.DateTime> LastLogon
	{
		get
		{
			return this._LastLogon;
		}
		set
		{
			if ((this._LastLogon != value))
			{
				this.OnLastLogonChanging(value);
				this.SendPropertyChanging();
				this._LastLogon = value;
				this.SendPropertyChanged("LastLogon");
				this.OnLastLogonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
	public System.Nullable<System.DateTime> DOB
	{
		get
		{
			return this._DOB;
		}
		set
		{
			if ((this._DOB != value))
			{
				this.OnDOBChanging(value);
				this.SendPropertyChanging();
				this._DOB = value;
				this.SendPropertyChanged("DOB");
				this.OnDOBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(10)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail", DbType="NVarChar(250)")]
	public string AlternateEmail
	{
		get
		{
			return this._AlternateEmail;
		}
		set
		{
			if ((this._AlternateEmail != value))
			{
				this.OnAlternateEmailChanging(value);
				this.SendPropertyChanging();
				this._AlternateEmail = value;
				this.SendPropertyChanged("AlternateEmail");
				this.OnAlternateEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail2", DbType="NVarChar(250)")]
	public string AlternateEmail2
	{
		get
		{
			return this._AlternateEmail2;
		}
		set
		{
			if ((this._AlternateEmail2 != value))
			{
				this.OnAlternateEmail2Changing(value);
				this.SendPropertyChanging();
				this._AlternateEmail2 = value;
				this.SendPropertyChanged("AlternateEmail2");
				this.OnAlternateEmail2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
	public System.Nullable<long> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				if (this._Member1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(200)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
	public System.Nullable<char> Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberImage", DbType="NVarChar(250)")]
	public string MemberImage
	{
		get
		{
			return this._MemberImage;
		}
		set
		{
			if ((this._MemberImage != value))
			{
				this.OnMemberImageChanging(value);
				this.SendPropertyChanging();
				this._MemberImage = value;
				this.SendPropertyChanged("MemberImage");
				this.OnMemberImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(250)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource", Storage="_CustomDataSources", ThisKey="ID", OtherKey="CreatedBy")]
	public EntitySet<CustomDataSource> CustomDataSources
	{
		get
		{
			return this._CustomDataSources;
		}
		set
		{
			this._CustomDataSources.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource1", Storage="_CustomDataSources1", ThisKey="ID", OtherKey="ModifiedBy")]
	public EntitySet<CustomDataSource> CustomDataSources1
	{
		get
		{
			return this._CustomDataSources1;
		}
		set
		{
			this._CustomDataSources1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage", Storage="_CustomPages", ThisKey="ID", OtherKey="CreatedBy")]
	public EntitySet<CustomPage> CustomPages
	{
		get
		{
			return this._CustomPages;
		}
		set
		{
			this._CustomPages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage1", Storage="_CustomPages1", ThisKey="ID", OtherKey="ModifiedBy")]
	public EntitySet<CustomPage> CustomPages1
	{
		get
		{
			return this._CustomPages1;
		}
		set
		{
			this._CustomPages1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Member", Storage="_Members", ThisKey="ID", OtherKey="ModifiedBy")]
	public EntitySet<Member> Members
	{
		get
		{
			return this._Members;
		}
		set
		{
			this._Members.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment", Storage="_PageComments", ThisKey="ID", OtherKey="MemberID")]
	public EntitySet<PageComment> PageComments
	{
		get
		{
			return this._PageComments;
		}
		set
		{
			this._PageComments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment1", Storage="_PageComments1", ThisKey="ID", OtherKey="ModifiedBy")]
	public EntitySet<PageComment> PageComments1
	{
		get
		{
			return this._PageComments1;
		}
		set
		{
			this._PageComments1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post", Storage="_Posts", ThisKey="ID", OtherKey="CreatedBy")]
	public EntitySet<Post> Posts
	{
		get
		{
			return this._Posts;
		}
		set
		{
			this._Posts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post1", Storage="_Posts1", ThisKey="ID", OtherKey="ModifiedBy")]
	public EntitySet<Post> Posts1
	{
		get
		{
			return this._Posts1;
		}
		set
		{
			this._Posts1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_TopStory", Storage="_TopStories", ThisKey="ID", OtherKey="CreatedBy")]
	public EntitySet<TopStory> TopStories
	{
		get
		{
			return this._TopStories;
		}
		set
		{
			this._TopStories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Member", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member1
	{
		get
		{
			return this._Member1.Entity;
		}
		set
		{
			Member previousValue = this._Member1.Entity;
			if (((previousValue != value) 
						|| (this._Member1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member1.Entity = null;
					previousValue.Members.Remove(this);
				}
				this._Member1.Entity = value;
				if ((value != null))
				{
					value.Members.Add(this);
					this._ModifiedBy = value.ID;
				}
				else
				{
					this._ModifiedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("Member1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CustomDataSources(CustomDataSource entity)
	{
		this.SendPropertyChanging();
		entity.Member = this;
	}
	
	private void detach_CustomDataSources(CustomDataSource entity)
	{
		this.SendPropertyChanging();
		entity.Member = null;
	}
	
	private void attach_CustomDataSources1(CustomDataSource entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = this;
	}
	
	private void detach_CustomDataSources1(CustomDataSource entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = null;
	}
	
	private void attach_CustomPages(CustomPage entity)
	{
		this.SendPropertyChanging();
		entity.Member = this;
	}
	
	private void detach_CustomPages(CustomPage entity)
	{
		this.SendPropertyChanging();
		entity.Member = null;
	}
	
	private void attach_CustomPages1(CustomPage entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = this;
	}
	
	private void detach_CustomPages1(CustomPage entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = null;
	}
	
	private void attach_Members(Member entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = this;
	}
	
	private void detach_Members(Member entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = null;
	}
	
	private void attach_PageComments(PageComment entity)
	{
		this.SendPropertyChanging();
		entity.Member = this;
	}
	
	private void detach_PageComments(PageComment entity)
	{
		this.SendPropertyChanging();
		entity.Member = null;
	}
	
	private void attach_PageComments1(PageComment entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = this;
	}
	
	private void detach_PageComments1(PageComment entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = null;
	}
	
	private void attach_Posts(Post entity)
	{
		this.SendPropertyChanging();
		entity.Member = this;
	}
	
	private void detach_Posts(Post entity)
	{
		this.SendPropertyChanging();
		entity.Member = null;
	}
	
	private void attach_Posts1(Post entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = this;
	}
	
	private void detach_Posts1(Post entity)
	{
		this.SendPropertyChanging();
		entity.Member1 = null;
	}
	
	private void attach_TopStories(TopStory entity)
	{
		this.SendPropertyChanging();
		entity.Member = this;
	}
	
	private void detach_TopStories(TopStory entity)
	{
		this.SendPropertyChanging();
		entity.Member = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberStatus")]
public partial class MemberStatus
{
	
	private int _ID;
	
	private string _Name;
	
	public MemberStatus()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageComment")]
public partial class PageComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<long> _MemberID;
	
	private string _Name;
	
	private string _Email;
	
	private string _Website;
	
	private string _MessageText;
	
	private System.DateTime _CreateDate;
	
	private byte _Status;
	
	private System.Nullable<long> _ModifiedBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private string _Note;
	
	private System.Nullable<long> _ParentId;
	
	private string _URL;
	
	private byte _CommentType;
	
	private string _IPAddress;
	
	private EntitySet<PageComment> _PageComments;
	
	private EntityRef<Member> _Member;
	
	private EntityRef<Member> _Member1;
	
	private EntityRef<PageComment> _PageComment1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(System.Nullable<long> value);
    partial void OnMemberIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnCommentTypeChanging(byte value);
    partial void OnCommentTypeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
	
	public PageComment()
	{
		this._PageComments = new EntitySet<PageComment>(new Action<PageComment>(this.attach_PageComments), new Action<PageComment>(this.detach_PageComments));
		this._Member = default(EntityRef<Member>);
		this._Member1 = default(EntityRef<Member>);
		this._PageComment1 = default(EntityRef<PageComment>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt")]
	public System.Nullable<long> MemberID
	{
		get
		{
			return this._MemberID;
		}
		set
		{
			if ((this._MemberID != value))
			{
				if (this._Member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMemberIDChanging(value);
				this.SendPropertyChanging();
				this._MemberID = value;
				this.SendPropertyChanged("MemberID");
				this.OnMemberIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string MessageText
	{
		get
		{
			return this._MessageText;
		}
		set
		{
			if ((this._MessageText != value))
			{
				this.OnMessageTextChanging(value);
				this.SendPropertyChanging();
				this._MessageText = value;
				this.SendPropertyChanged("MessageText");
				this.OnMessageTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
	public System.Nullable<long> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				if (this._Member1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
	public System.Nullable<long> ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				if (this._PageComment1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentType", DbType="TinyInt NOT NULL")]
	public byte CommentType
	{
		get
		{
			return this._CommentType;
		}
		set
		{
			if ((this._CommentType != value))
			{
				this.OnCommentTypeChanging(value);
				this.SendPropertyChanging();
				this._CommentType = value;
				this.SendPropertyChanged("CommentType");
				this.OnCommentTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string IPAddress
	{
		get
		{
			return this._IPAddress;
		}
		set
		{
			if ((this._IPAddress != value))
			{
				this.OnIPAddressChanging(value);
				this.SendPropertyChanging();
				this._IPAddress = value;
				this.SendPropertyChanged("IPAddress");
				this.OnIPAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageComment_PageComment", Storage="_PageComments", ThisKey="ID", OtherKey="ParentId")]
	public EntitySet<PageComment> PageComments
	{
		get
		{
			return this._PageComments;
		}
		set
		{
			this._PageComments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
	public Member Member
	{
		get
		{
			return this._Member.Entity;
		}
		set
		{
			Member previousValue = this._Member.Entity;
			if (((previousValue != value) 
						|| (this._Member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member.Entity = null;
					previousValue.PageComments.Remove(this);
				}
				this._Member.Entity = value;
				if ((value != null))
				{
					value.PageComments.Add(this);
					this._MemberID = value.ID;
				}
				else
				{
					this._MemberID = default(Nullable<long>);
				}
				this.SendPropertyChanged("Member");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member1
	{
		get
		{
			return this._Member1.Entity;
		}
		set
		{
			Member previousValue = this._Member1.Entity;
			if (((previousValue != value) 
						|| (this._Member1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member1.Entity = null;
					previousValue.PageComments1.Remove(this);
				}
				this._Member1.Entity = value;
				if ((value != null))
				{
					value.PageComments1.Add(this);
					this._ModifiedBy = value.ID;
				}
				else
				{
					this._ModifiedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("Member1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageComment_PageComment", Storage="_PageComment1", ThisKey="ParentId", OtherKey="ID", IsForeignKey=true)]
	public PageComment PageComment1
	{
		get
		{
			return this._PageComment1.Entity;
		}
		set
		{
			PageComment previousValue = this._PageComment1.Entity;
			if (((previousValue != value) 
						|| (this._PageComment1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PageComment1.Entity = null;
					previousValue.PageComments.Remove(this);
				}
				this._PageComment1.Entity = value;
				if ((value != null))
				{
					value.PageComments.Add(this);
					this._ParentId = value.ID;
				}
				else
				{
					this._ParentId = default(Nullable<long>);
				}
				this.SendPropertyChanged("PageComment1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PageComments(PageComment entity)
	{
		this.SendPropertyChanging();
		entity.PageComment1 = this;
	}
	
	private void detach_PageComments(PageComment entity)
	{
		this.SendPropertyChanging();
		entity.PageComment1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private string _Title;
	
	private System.DateTime _DateCreated;
	
	private System.Nullable<System.DateTime> _DateModified;
	
	private long _CreatedBy;
	
	private System.Nullable<long> _ModifiedBy;
	
	private int _Category;
	
	private string _Tag;
	
	private byte _Status;
	
	private string _Description;
	
	private string _Article;
	
	private string _WriterName;
	
	private string _WriterEmail;
	
	private string _OGImage;
	
	private string _OGDescription;
	
	private int _Viewed;
	
	private string _URL;
	
	private bool _Sitemap;
	
	private EntitySet<TopStory> _TopStories;
	
	private EntityRef<Category> _Category1;
	
	private EntityRef<Member> _Member;
	
	private EntityRef<Member> _Member1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnWriterNameChanging(string value);
    partial void OnWriterNameChanged();
    partial void OnWriterEmailChanging(string value);
    partial void OnWriterEmailChanged();
    partial void OnOGImageChanging(string value);
    partial void OnOGImageChanged();
    partial void OnOGDescriptionChanging(string value);
    partial void OnOGDescriptionChanged();
    partial void OnViewedChanging(int value);
    partial void OnViewedChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSitemapChanging(bool value);
    partial void OnSitemapChanged();
    #endregion
	
	public Post()
	{
		this._TopStories = new EntitySet<TopStory>(new Action<TopStory>(this.attach_TopStories), new Action<TopStory>(this.detach_TopStories));
		this._Category1 = default(EntityRef<Category>);
		this._Member = default(EntityRef<Member>);
		this._Member1 = default(EntityRef<Member>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateModified
	{
		get
		{
			return this._DateModified;
		}
		set
		{
			if ((this._DateModified != value))
			{
				this.OnDateModifiedChanging(value);
				this.SendPropertyChanging();
				this._DateModified = value;
				this.SendPropertyChanged("DateModified");
				this.OnDateModifiedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
	public long CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._Member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
	public System.Nullable<long> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				if (this._Member1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL")]
	public int Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				if (this._Category1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoryChanging(value);
				this.SendPropertyChanging();
				this._Category = value;
				this.SendPropertyChanged("Category");
				this.OnCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Tag
	{
		get
		{
			return this._Tag;
		}
		set
		{
			if ((this._Tag != value))
			{
				this.OnTagChanging(value);
				this.SendPropertyChanging();
				this._Tag = value;
				this.SendPropertyChanged("Tag");
				this.OnTagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			if ((this._Article != value))
			{
				this.OnArticleChanging(value);
				this.SendPropertyChanging();
				this._Article = value;
				this.SendPropertyChanged("Article");
				this.OnArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriterName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string WriterName
	{
		get
		{
			return this._WriterName;
		}
		set
		{
			if ((this._WriterName != value))
			{
				this.OnWriterNameChanging(value);
				this.SendPropertyChanging();
				this._WriterName = value;
				this.SendPropertyChanged("WriterName");
				this.OnWriterNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriterEmail", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string WriterEmail
	{
		get
		{
			return this._WriterEmail;
		}
		set
		{
			if ((this._WriterEmail != value))
			{
				this.OnWriterEmailChanging(value);
				this.SendPropertyChanging();
				this._WriterEmail = value;
				this.SendPropertyChanged("WriterEmail");
				this.OnWriterEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGImage", DbType="VarChar(300)")]
	public string OGImage
	{
		get
		{
			return this._OGImage;
		}
		set
		{
			if ((this._OGImage != value))
			{
				this.OnOGImageChanging(value);
				this.SendPropertyChanging();
				this._OGImage = value;
				this.SendPropertyChanged("OGImage");
				this.OnOGImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGDescription", DbType="NVarChar(500)")]
	public string OGDescription
	{
		get
		{
			return this._OGDescription;
		}
		set
		{
			if ((this._OGDescription != value))
			{
				this.OnOGDescriptionChanging(value);
				this.SendPropertyChanging();
				this._OGDescription = value;
				this.SendPropertyChanged("OGDescription");
				this.OnOGDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viewed", DbType="Int NOT NULL")]
	public int Viewed
	{
		get
		{
			return this._Viewed;
		}
		set
		{
			if ((this._Viewed != value))
			{
				this.OnViewedChanging(value);
				this.SendPropertyChanging();
				this._Viewed = value;
				this.SendPropertyChanged("Viewed");
				this.OnViewedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sitemap", DbType="Bit NOT NULL")]
	public bool Sitemap
	{
		get
		{
			return this._Sitemap;
		}
		set
		{
			if ((this._Sitemap != value))
			{
				this.OnSitemapChanging(value);
				this.SendPropertyChanging();
				this._Sitemap = value;
				this.SendPropertyChanged("Sitemap");
				this.OnSitemapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TopStory", Storage="_TopStories", ThisKey="ID", OtherKey="PostId")]
	public EntitySet<TopStory> TopStories
	{
		get
		{
			return this._TopStories;
		}
		set
		{
			this._TopStories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Category1", ThisKey="Category", OtherKey="ID", IsForeignKey=true)]
	public Category Category1
	{
		get
		{
			return this._Category1.Entity;
		}
		set
		{
			Category previousValue = this._Category1.Entity;
			if (((previousValue != value) 
						|| (this._Category1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Category1.Entity = null;
					previousValue.Posts.Remove(this);
				}
				this._Category1.Entity = value;
				if ((value != null))
				{
					value.Posts.Add(this);
					this._Category = value.ID;
				}
				else
				{
					this._Category = default(int);
				}
				this.SendPropertyChanged("Category1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member
	{
		get
		{
			return this._Member.Entity;
		}
		set
		{
			Member previousValue = this._Member.Entity;
			if (((previousValue != value) 
						|| (this._Member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member.Entity = null;
					previousValue.Posts.Remove(this);
				}
				this._Member.Entity = value;
				if ((value != null))
				{
					value.Posts.Add(this);
					this._CreatedBy = value.ID;
				}
				else
				{
					this._CreatedBy = default(long);
				}
				this.SendPropertyChanged("Member");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member1
	{
		get
		{
			return this._Member1.Entity;
		}
		set
		{
			Member previousValue = this._Member1.Entity;
			if (((previousValue != value) 
						|| (this._Member1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member1.Entity = null;
					previousValue.Posts1.Remove(this);
				}
				this._Member1.Entity = value;
				if ((value != null))
				{
					value.Posts1.Add(this);
					this._ModifiedBy = value.ID;
				}
				else
				{
					this._ModifiedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("Member1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TopStories(TopStory entity)
	{
		this.SendPropertyChanging();
		entity.Post = this;
	}
	
	private void detach_TopStories(TopStory entity)
	{
		this.SendPropertyChanging();
		entity.Post = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostStatus")]
public partial class PostStatus
{
	
	private int _ID;
	
	private string _Name;
	
	public PostStatus()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TopStory")]
public partial class TopStory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private long _PostId;
	
	private long _CreatedBy;
	
	private System.DateTime _DateCreated;
	
	private EntityRef<Member> _Member;
	
	private EntityRef<Post> _Post;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostIdChanging(long value);
    partial void OnPostIdChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
	
	public TopStory()
	{
		this._Member = default(EntityRef<Member>);
		this._Post = default(EntityRef<Post>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="BigInt NOT NULL")]
	public long PostId
	{
		get
		{
			return this._PostId;
		}
		set
		{
			if ((this._PostId != value))
			{
				if (this._Post.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPostIdChanging(value);
				this.SendPropertyChanging();
				this._PostId = value;
				this.SendPropertyChanged("PostId");
				this.OnPostIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
	public long CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._Member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_TopStory", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
	public Member Member
	{
		get
		{
			return this._Member.Entity;
		}
		set
		{
			Member previousValue = this._Member.Entity;
			if (((previousValue != value) 
						|| (this._Member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member.Entity = null;
					previousValue.TopStories.Remove(this);
				}
				this._Member.Entity = value;
				if ((value != null))
				{
					value.TopStories.Add(this);
					this._CreatedBy = value.ID;
				}
				else
				{
					this._CreatedBy = default(long);
				}
				this.SendPropertyChanged("Member");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TopStory", Storage="_Post", ThisKey="PostId", OtherKey="ID", IsForeignKey=true)]
	public Post Post
	{
		get
		{
			return this._Post.Entity;
		}
		set
		{
			Post previousValue = this._Post.Entity;
			if (((previousValue != value) 
						|| (this._Post.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Post.Entity = null;
					previousValue.TopStories.Remove(this);
				}
				this._Post.Entity = value;
				if ((value != null))
				{
					value.TopStories.Add(this);
					this._PostId = value.ID;
				}
				else
				{
					this._PostId = default(long);
				}
				this.SendPropertyChanged("Post");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
